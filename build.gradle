ext {
    guava_core = "com.google.guava:guava:$guava_version"
    hibernate_core = "org.hibernate:hibernate-core:$hibernate_version"
    hibernate_java8 = "org.hibernate:hibernate-java8:$hibernate_version"
    hibernate_validator = "org.hibernate:hibernate-validator:$hibernate_validator_version"
    javax_persistence = "org.hibernate.javax.persistence:hibernate-jpa-2.1-api:$javax_persistence_version"
    javax_el = "javax.el:el-api:$javax_el_version"
    spring_context = "org.springframework:spring-context:$spring_version"
    spring_context_support = "org.springframework:spring-context-support:$spring_version"

    spring_orm = "org.springframework:spring-orm:$spring_version"
    spring_mvc = "org.springframework:spring-webmvc:$spring_version"
    spring_test = "org.springframework:spring-test:$spring_version"
    spring_rest_docs = "org.springframework.restdocs:spring-restdocs-mockmvc:$spring_rest_docs_version"
    spring_security_core = "org.springframework.security:spring-security-core:$spring_security_version"
    spring_security_config = "org.springframework.security:spring-security-config:$spring_security_version"
    spring_security_web = "org.springframework.security:spring-security-web:$spring_security_version"
    postgres_jdbc_driver = "org.postgresql:postgresql:$postgres_version"
    apache_commons_lang = "org.apache.commons:commons-lang3:$apache_commons_lang_version"
    apache_commons_collections4 = "org.apache.commons:commons-collections4:$apache_commons_collections_version"
    apache_commons_commons_beanutils = "commons-beanutils:commons-beanutils:$apache_commons_commons_beanutils_version"
    jackson = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jackson_version"
    junit = "junit:junit:$junit_version"
    hsqldb = "org.hsqldb:hsqldb:$hsqldb_version"
    servlet_api = "javax.servlet:javax.servlet-api:$servlet_api_version"
    jjwt = "io.jsonwebtoken:jjwt:$jjwt_version"
    javax_mail = "javax.mail:mail:$javax_mail_version"

    /* Logging bridge */
    slf4j = "org.slf4j:slf4j-api:$slf4j_version"
    /* Logging framework */
    log4j2 = "org.apache.logging.log4j:log4j-core:$log4j2_version"
    /* Bridge-implementation binding */
    slf4j_log4j2_binding = "org.apache.logging.log4j:log4j-slf4j-impl:$slf4j_log4j2_binding_version"
    /* Commons-logging redirection to SLF4J. Make sure commons-logging excluded from Spring */
    jcl_over_slf4j = "org.slf4j:jcl-over-slf4j:$jcl_over_slf4j_version"
    /* Updated version of Hibernate's logger dependency. Needed for proper SLF4J integration with Hibernate */
    jboss_logging = "org.jboss.logging:jboss-logging:$jboss_logging_version"
}

allprojects {
    apply plugin: 'java'
    sourceCompatibility = 1.8
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        compile slf4j, log4j2, slf4j_log4j2_binding, jcl_over_slf4j, jboss_logging
        testCompile junit
        testCompile hsqldb
        testCompile spring_test
    }
    configurations {
        /* For proper SLF4J integration with Spring */
        compile.exclude group: "commons-logging"
    }
}
apply plugin: 'pmd'
pmd {
    ignoreFailures = true
    reportsDir = file("$project.buildDir/pmd/")
    ruleSetFiles = files('/pmd-ruleset.xml')
}
task pmd(type: Pmd) {
    subprojects.each() {
        source += fileTree('/' + it.name + '/src/test/java') + fileTree('/' + it.name + '/src/main/java')
    }
    reports {
        xml.enabled = false
        html.enabled = true
    }
}
check.doLast {
    project.tasks.getByName("pmd").execute()
}
